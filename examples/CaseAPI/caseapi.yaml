openapi: '3.0.0'
info:
  title: LogRhythm Case API
  version: '3.0.0'
  description: This is the API documentation for the LogRhythm Case service.
servers:
  - url: https://localhost:8501/lr-case-api
    description: Local API Gateway (https)
paths:
  '/cases':
    get:
      operationId: listCases
      summary: List Cases
      description: Retrieve a filtered list of cases. Supports pagination.
      parameters:
        - name: offset
          in: query
          description: Where to start paging
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The returned case.
          content:
            'application/vnd.logrhythm.case.list.v1+json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseV1'
            'application/vnd.logrhythm.case.list.v2+json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseV2'
  '/cases/{id}/evidence':
    post:
      operationId: createEvidence
      summary: Create Evidence
      description: Add a new piece of evidence to a case.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the Case to add evidence to.
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/vnd.logrhythm.case-evidence.list.v1+json':
            schema:
              type: array
              items:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/NoteEvidence'
                  - $ref: '#/components/schemas/AlarmEvidence'
                discriminator:
                  propertyName: evidenceType
      responses:
        '201':
          description: The created evidence
          content:
            'application/vnd.logrhythm.case-evidence.list.v1+json':
              schema:
                type: array
                items:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/NoteEvidence'
                    - $ref: '#/components/schemas/AlarmEvidence'
                  discriminator:
                    propertyName: evidenceType

components:
  schemas:
    CaseV1:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    CaseV2:
      type: object
      required:
        - id
        - name
        - status
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        status:
          type: integer
          format: int32
          minimum: 1
          maximum: 5
    Evidence:
      type: object
      discriminator:
        propertyName: evidenceType
      required:
        - id
        - evidenceType
      properties:
        id:
          type: integer
          format: int32
        evidenceType:
          type: string
    NoteEvidence:
      allOf:
        - $ref: '#/components/schemas/Evidence'
        - type: object
          required:
            - note
          properties:
            note:
              type: string
    AlarmEvidence:
      allOf:
        - $ref: '#/components/schemas/Evidence'
        - type: object
          required:
            - alarmId
          properties:
            alarmId:
              type: integer
              format: int32
